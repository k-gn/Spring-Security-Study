server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234

  # 생략 가능
  #  mvc:
  #    view:
  #      prefix: /templates/
  #      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration: # facebook, google oauth2 로그인은 스프링이 지원한다.
          google:
            client-id: 844524611459-4lplfhjsbv8tg6f2legoqrklmjrdt5ah.apps.googleusercontent.com
            client-secret: GbVCY6GIK8xdPTOzEXLH0JFS
            scope:
              - email
              - profile

          # oauth2 client 에서 스프링이 Provider로 제공하지 않는 oauth2 로그인은 직접 등록해준다.
          naver:
            client-id: njdfqedMjbI2vZCp6UW3
            client-secret: nvuVJIuiD3
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code # oauth2 방식 중 코드 승인 타입 사용
            redirect-url: http://localhost:8080/login/oauth2/code/naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네아로 연동 (네아로 로그인창 띄울 주소)
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 받기위한 주소
            user-info-uri: https://openapi.naver.com/v1/nid/me # 프로필을 받기위한 주소
            # 기준이 되는 user_name 의 이름을 네이버에서는 response key값으로 지정해야한다. (네이버 회원 조회시 반환되는 JSON 형태 떄문이다)
            user-name-attribute: response # 다시말해 회원정보를 json으로 받는데 키값을 response로 네이버가 리턴해준다.

#          facebook:
#            client-id:
#            client-secret:
#            scope:
#              - email
#              - public_profile

